<?xml version="1.0" encoding="UTF-8"?>
<!-- Warning: Used as template!  Make sure you're pointing at the correct file. -->
<Environment checkpointEvery="10">
    <PopulationGroup id="nsp" totalSize="200">
        <Population initialSize="200" id="DirectlyEncodedNetworkOperators">
            <DefaultVectorIndividualData generations="1" file="deno.csv"/>
            <DefaultAgentFactory agentClass="neutrality.nsp.DirectlyEncodedNetworkOperator">
            </DefaultAgentFactory>
            <VectorIndividualFactory length="8">
                <GaussianRandomVectorRange start="0" end="7">
                    <Means type="DoubleList" start="0" end="7">3 3 0 0 0 0 0 0</Means>
                    <Deviations type="DoubleList" start="0" end="7">0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01</Deviations>
                </GaussianRandomVectorRange>
            </VectorIndividualFactory>
            <VectorCrossoverPipeline crossoverProb="0.3">
                <VectorMutationPipeline>
                    <WeightedBreedingPipeline>
                        <TournamentSelector topIndividuals="1"
                                            tournamentSize="2" weight="4"/>
                        <ElitismSelector proportionElites="0.1" weight="1"/>
                    </WeightedBreedingPipeline>
                    <VectorMutator length="8">
                        <GaussianMutator start="0" end="7">
                            <MutationProbability type="DoubleList" start="0" end="7">1 1 1 1 1 1 1 1</MutationProbability>
                            <Deviations type="DoubleList" start="0" end="7">0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01</Deviations>
                        </GaussianMutator>
                    </VectorMutator>
                </VectorMutationPipeline>
            </VectorCrossoverPipeline>
        </Population>
    </PopulationGroup>

    <PopulationGroup id="videoContent" totalSize="200">

        <TournamentBalancer tournamentSize="2" topIndividuals="1"/>

        <Population initialSize="100"
                    id="ContingentLinearVideoContentProviders">
            <!--<DefaultVectorIndividualData generations="100" file="clvcp.csv"/>-->
            <DefaultAgentFactory agentClass="neutrality.cp.ContingentLinearContentProvider">
                <Parameter name="isVideoProvider" value="true"/>
            </DefaultAgentFactory>
            <VectorIndividualFactory length="80">
                <GaussianRandomVectorRange start="0" end="79">
                    <Means type="RepeatingDouble" start="0" end="79" value="0"/>
                    <Deviations type="RepeatingDouble" start="0" end="79"
                                value="0.01"/>
                </GaussianRandomVectorRange>
            </VectorIndividualFactory>
            <VectorCrossoverPipeline crossoverProb="0.3">
                <VectorMutationPipeline>
                    <WeightedBreedingPipeline>
                        <TournamentSelector topIndividuals="1"
                                            tournamentSize="2" weight="4"/>
                        <ElitismSelector proportionElites="0.1" weight="1"/>
                    </WeightedBreedingPipeline>
                    <VectorMutator length="80">
                        <GaussianMutator start="0" end="79">
                            <MutationProbability type="RepeatingDouble"
                                                 start="0" end="79"
                                                 value="0.1"/>
                            <Deviations type="RepeatingDouble" start="0"
                                        end="79" value="0.01"/>
                        </GaussianMutator>
                    </VectorMutator>
                </VectorMutationPipeline>
            </VectorCrossoverPipeline>
        </Population>

        <Population initialSize="100" id="DirectlyEncodedVideoContentProviders">
            <DefaultVectorIndividualData generations="1" file="devcp.csv"/>
            <DefaultAgentFactory agentClass="neutrality.cp.DirectlyEncodedContentProvider">
                <Parameter name="isVideoProvider" value="true"/>
            </DefaultAgentFactory>
            <VectorIndividualFactory length="2">
                <GaussianRandomVectorRange start="0" end="1">
                    <Means type="DoubleList" start="0" end="1">0.0 0.0</Means>
                    <Deviations type="DoubleList" start="0" end="1">0.01 0.01</Deviations>
                </GaussianRandomVectorRange>
            </VectorIndividualFactory>
            <VectorCrossoverPipeline crossoverProb="0.3">
                <VectorMutationPipeline>
                    <WeightedBreedingPipeline>
                        <TournamentSelector topIndividuals="2"
                                            tournamentSize="10" weight="4"/>
                        <ElitismSelector proportionElites="0.1" weight="1"/>
                    </WeightedBreedingPipeline>
                    <VectorMutator length="2">
                        <GaussianMutator start="0" end="1">
                            <MutationProbability type="DoubleList" start="0" end="1">1 1</MutationProbability>
                            <Deviations type="DoubleList" start="0" end="1">0.01 0.01</Deviations>
                        </GaussianMutator>
                    </VectorMutator>
                </VectorMutationPipeline>
            </VectorCrossoverPipeline>
        </Population>
    </PopulationGroup>

    <PopulationGroup id="otherContent" totalSize="200">
        <Population initialSize="200" id="DirectlyEncodedOtherContentProviders">
            <DefaultVectorIndividualData generations="1" file="deocp.csv"/>
            <DefaultAgentFactory agentClass="neutrality.cp.DirectlyEncodedContentProvider">
                <Parameter name="isVideoProvider" value="false"/>
            </DefaultAgentFactory>
            <VectorIndividualFactory length="2">
                <GaussianRandomVectorRange start="0" end="1">
                    <Means type="DoubleList" start="0" end="1">0.0 0.0</Means>
                    <Deviations type="DoubleList" start="0" end="1">0.01 0.01</Deviations>
                </GaussianRandomVectorRange>
            </VectorIndividualFactory>
            <VectorCrossoverPipeline crossoverProb="0.3">
                <VectorMutationPipeline>
                    <WeightedBreedingPipeline>
                        <TournamentSelector topIndividuals="2"
                                            tournamentSize="10" weight="4"/>
                        <ElitismSelector proportionElites="0.1" weight="1"/>
                    </WeightedBreedingPipeline>
                    <VectorMutator length="2">
                        <GaussianMutator start="0" end="1">
                            <MutationProbability type="DoubleList" start="0" end="1">1 1</MutationProbability>
                            <Deviations type="DoubleList" start="0" end="1">0.01 0.01</Deviations>
                        </GaussianMutator>
                    </VectorMutator>
                </VectorMutationPipeline>
            </VectorCrossoverPipeline>
        </Population>
    </PopulationGroup>

    <!-- Need an EvaluationGroupFactory -->
    <ShuffledEvaluationGroupFactory numGroups="220">
        <AgentSource populationGroup="nsp" numAgents="1"/>
        <AgentSource populationGroup="videoContent" numAgents="3"/>
        <AgentSource populationGroup="otherContent" numAgents="3"/>
    </ShuffledEvaluationGroupFactory>

    <!-- Need an Agent Model Factory -->
    <DefaultAgentModelFactory modelClass="neutrality.NeutralityModel">
        <Parameter name="alpha" value="1.0"/> <!-- 1 for testing -->
        <Parameter name="beta" value="1.0"/> <!-- 1 for testing -->
        <Parameter name="psi" value="0.4"/>
        <Parameter name="tau" value="0.4"/>
        <Parameter name="gamma" value="0.5"/>
        <Parameter name="income" value="10000"/>
        <Parameter name="firmEndowment" value="100000"/>
        <Parameter name="maxSteps" value="10"/>

        <Parameter name="policy0PriceIXC" value="true"/>
        <Parameter name="policyBundlingAllowed" value="true"/>
        <Parameter name="policyZeroRated" value="false"/>
        <Parameter name="policyNSPContentAllowed" value="true"/>
    </DefaultAgentModelFactory>


    <!-- Environment Statistics -->
    <DefaultEnvironmentStatistics file="DefaultEnvironmentStatistics.csv" format="csv"/>

    <!-- Need an Evaluator -->
    <!-- <LocalEvaluator/> -->
    <LocalParallelEvaluator/>

    <!-- Test out an DefaultAgentModelReporter -->
    <DefaultModelSummaryData generations="10" file="summary.csv" format="csv"/>

</Environment>
